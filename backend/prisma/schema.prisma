
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  lastLogin DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  employerJobs       Job[]         @relation("EmployerJobs")
  applications       Application[] @relation("FreelancerApplications")
}

enum Role {
  EMPLOYER
  FREELANCER
}

model Skill {
  id    String @id @default(uuid())
  name  String @unique

  // Relations
  jobs JobSkill[]
}

model Job {
  id          String   @id @default(uuid())
  title       String
  description String
  budget      Float
  status      JobStatus @default(OPEN)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  // Relations
  employerId  String
  employer    User       @relation("EmployerJobs", fields: [employerId], references: [id])
  applications Application[]
  skills      JobSkill[]

  @@index([employerId])
}

model JobSkill {
  jobId     String
  skillId   String
  
  // Relations
  job       Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)
  skill     Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)

  @@id([jobId, skillId])
  @@index([jobId])
  @@index([skillId])
}

enum JobStatus {
  OPEN
  CLOSED
  ARCHIVED
}

model Application {
  id          String   @id @default(uuid())
  message     String
  createdAt   DateTime @default(now())
  
  // Relations
  jobId       String
  job         Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  
  freelancerId String
  freelancer   User    @relation("FreelancerApplications", fields: [freelancerId], references: [id])

  @@unique([jobId, freelancerId])
  @@index([jobId])
  @@index([freelancerId])
}
